/*
 * Oxford Brookes University Secure Email Proxy
 * Copyright (C) 2002/3 Oxford Brookes University Secure Email Project
 * http://secemail.brookes.ac.uk
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 *
 * The Secure Email Project is:
 *
 * Marcus Povey <mpovey@brookes.ac.uk> or <icewing@dushka.co.uk>
 * Damian Branigan <dbranigan@brookes.ac.uk>
 * George Davson <gdavson@brookes.ac.uk>
 * David Duce <daduce@brookes.ac.uk>
 * Simon Hogg <simon.hogg@brookes.ac.uk>
 * Faye Mitchell <frmitchell@brookes.ac.uk>
 *
 * For further information visit the secure email project website.
 */

package ui;
import core.exceptions.*; 
import core.keyhandlers.*;
import core.keyhandlers.identifiers.*;
import core.keyhandlers.keydata.*;
import core.keyhandlers.parameters.*;
import core.algorithmhandlers.keymaterial.*;
import core.algorithmhandlers.openpgp.util.*;
import java.io.*;
import java.util.Vector;

/**
 * <p>Dialog to add a key source.</p>
 */
public class AddKeySource extends javax.swing.JDialog {
    
    /** Creates new form AddKeySource */
    public AddKeySource(java.awt.Frame parent, boolean modal, String classlistfile) {
        super(parent, modal);
        returnValue = null;
        sourceClasses = new Vector();
        
        // locate resource & load list of possible options
        try {
            BufferedReader r = new BufferedReader(new InputStreamReader(this.getClass().getResourceAsStream(classlistfile)));

            while (r.ready()) {
                sourceClasses.add(r.readLine());
            }

            r.close();
        } catch (Exception e) {
            System.err.println(e.getMessage());
        }
        
        initComponents();
        
        doComboBox();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        typeFile = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        typeServer = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add key source");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        jButton1.setMnemonic('o');
        jButton1.setText("Ok");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel1.add(jButton1);

        jButton2.setMnemonic('c');
        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel1.add(jButton2);

        getContentPane().add(jPanel1, java.awt.BorderLayout.SOUTH);

        jPanel2.setPreferredSize(new java.awt.Dimension(400, 120));
        jLabel1.setText("Type");
        jPanel3.add(jLabel1);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(sourceClasses));
        jComboBox1.setPreferredSize(new java.awt.Dimension(300, 25));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jPanel3.add(jComboBox1);

        jPanel2.add(jPanel3);

        jLabel2.setText("Filename");
        typeFile.add(jLabel2);

        jTextField1.setColumns(20);
        typeFile.add(jTextField1);

        jPanel2.add(typeFile);

        typeServer.setLayout(new java.awt.BorderLayout());

        jLabel3.setText("Port");
        jPanel4.add(jLabel3);

        jTextField2.setColumns(5);
        jPanel4.add(jTextField2);

        typeServer.add(jPanel4, java.awt.BorderLayout.CENTER);

        jLabel4.setText("Address");
        jPanel5.add(jLabel4);

        jTextField3.setColumns(20);
        jPanel5.add(jTextField3);

        typeServer.add(jPanel5, java.awt.BorderLayout.NORTH);

        jPanel2.add(typeServer);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        pack();
    }//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // Add your handling code here:
        try {
            // construct class, test type, make visible / invisible
            String type = "core.keyhandlers." + jComboBox1.getSelectedItem();

            Class c = Class.forName(type);               
            Object o = c.newInstance();

            // basic class type test
            if (o instanceof KeyFile) {
                KeyFile kf = (KeyFile)o;
                kf.setFile(jTextField1.getText());
                returnValue = kf;
            } else if (o instanceof KeyServer) {
                KeyServer ks = (KeyServer)o;
                ks.setServer(jTextField3.getText(), Integer.parseInt(jTextField2.getText()));
                returnValue = ks;
            } else {
                System.err.println("Unrecognised key source class");
            }
        } catch (Exception e) {
            System.err.println(e.getMessage());
        }
        
        setVisible(false);
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void doComboBox() {
        try {
            // construct class, test type, make visible / invisible
            String type = "core.keyhandlers." + jComboBox1.getSelectedItem();

            Class c = Class.forName(type);               
            Object o = c.newInstance();

            // basic class type test
            if (o instanceof KeyFile) {
                typeFile.setVisible(true);
                typeServer.setVisible(false);
            } else if (o instanceof KeyServer) {
                typeFile.setVisible(false);
                typeServer.setVisible(true);
            } else {
                typeFile.setVisible(false);
                typeServer.setVisible(false);
                System.err.println("Unrecognised key source class");
            }
        } catch (Exception e) {
            System.err.println(e.getMessage());
        }
    }
    
    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // Add your handling code here:
        doComboBox();
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // Add your handling code here:
        returnValue = null;
        setVisible(false);
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed
    
    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog
    
    
    public KeyHandler getReturnValue() {
        return returnValue;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JPanel typeServer;
    private javax.swing.JPanel typeFile;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
    private KeyHandler returnValue;
    private Vector sourceClasses;
}
