/*
 * Oxford Brookes University Secure Email Proxy 
 * Copyright (C) 2002/3 Oxford Brookes University Secure Email Project
 * http://secemail.brookes.ac.uk
 * 
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 * 
 * The Secure Email Project is:
 * 
 * Marcus Povey <mpovey@brookes.ac.uk> or <icewing@dushka.co.uk>
 * Damian Branigan <dbranigan@brookes.ac.uk>
 * George Davson <gdavson@brookes.ac.uk>
 * David Duce <daduce@brookes.ac.uk>
 * Simon Hogg <simon.hogg@brookes.ac.uk>
 * Faye Mitchell <frmitchell@brookes.ac.uk>
 * 
 * For further information visit the secure email project website.
 */

package ui;
import system.ConfigurationData;
import java.io.*;
import java.lang.*;
import java.util.*;
import java.security.*;

/**
 * The config window class. Allows the user to set various options within the client.
 */
public class ConfigurationWindow extends javax.swing.JDialog {
    
    /** Creates new form ConfigurationWindow */
    public ConfigurationWindow(ConfigurationData configFile, java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        
        configurationData = configFile;
        
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel6 = new javax.swing.JPanel();
        jPanel25 = new javax.swing.JPanel();
        jPanel26 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox();
        jPanel27 = new javax.swing.JPanel();
        jPanel24 = new javax.swing.JPanel();
        jCheckBox2 = new javax.swing.JCheckBox();
        jPanel7 = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jPanel9 = new javax.swing.JPanel();
        jPanel20 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jPanel32 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jPanel19 = new javax.swing.JPanel();
        jPanel33 = new javax.swing.JPanel();
        jCheckBox4 = new javax.swing.JCheckBox();
        jPanel34 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jPanel35 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jPasswordField2 = new javax.swing.JPasswordField();
        jPanel10 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jPanel17 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jPanel18 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jPanel13 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jPanel28 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jPanel15 = new javax.swing.JPanel();
        jPanel30 = new javax.swing.JPanel();
        jCheckBox3 = new javax.swing.JCheckBox();
        jPanel31 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();
        jPanel29 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Configure Proxy");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        jButton1.setMnemonic('o');
        jButton1.setText("Ok");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel1.add(jButton1);

        jButton3.setMnemonic('c');
        jButton3.setText("Cancel");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jPanel1.add(jButton3);

        jButton2.setMnemonic('a');
        jButton2.setText("Apply");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel1.add(jButton2);

        getContentPane().add(jPanel1, java.awt.BorderLayout.SOUTH);

        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel2.setPreferredSize(new java.awt.Dimension(400, 400));
        jPanel4.setLayout(new java.awt.BorderLayout());

        jPanel4.setPreferredSize(new java.awt.Dimension(300, 300));
        jTextArea1.setBackground(new java.awt.Color(204, 204, 204));
        jTextArea1.setEditable(false);
        jTextArea1.setLineWrap(true);
        jTextArea1.setText("\nIt is recommended that you do not change any of the settings unless you fully understand the implications of doing so.\n\nNote: Changes will not come info effect until you restart the Proxy Server");
        jTextArea1.setWrapStyleWord(true);
        jPanel4.add(jTextArea1, java.awt.BorderLayout.CENTER);

        jPanel3.add(jPanel4);

        jTabbedPane1.addTab("Important Notes", jPanel3);

        jPanel6.setLayout(new java.awt.BorderLayout());

        jPanel25.setBorder(new javax.swing.border.TitledBorder("Algorithm Settings"));
        jPanel26.setLayout(new java.awt.BorderLayout());

        jLabel15.setText("Symmetric Algorithm");
        jPanel8.add(jLabel15);

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(populateComboBox("openpgp.symmetricalgorithm.available","IDEA,CAST5,3DES")));
        jComboBox3.setSelectedItem(configurationData.getSetting("openpgp.symmetricalgorithm.used","IDEA"));
        jComboBox3.setPreferredSize(new java.awt.Dimension(150, 25));
        jPanel8.add(jComboBox3);

        jPanel26.add(jPanel8, java.awt.BorderLayout.CENTER);

        jPanel25.add(jPanel26);

        jPanel27.setLayout(new java.awt.BorderLayout());

        jCheckBox2.setSelected((configurationData.getSetting("openpgp.signalloutgoingemail","1").compareTo("1")==0));
        jCheckBox2.setText("Sign all outgoing email (recommended)");
        jPanel24.add(jCheckBox2);

        jPanel27.add(jPanel24, java.awt.BorderLayout.CENTER);

        jCheckBox1.setSelected((configurationData.getSetting("openpgp.encryptalloutgoingemail","1").compareTo("1")==0));
        jCheckBox1.setText("Encrypt all outgoing email (recommended)");
        jPanel7.add(jCheckBox1);

        jPanel27.add(jPanel7, java.awt.BorderLayout.NORTH);

        jPanel25.add(jPanel27);

        jPanel6.add(jPanel25, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("OpenPGPSettings", jPanel6);

        jPanel9.setLayout(new java.awt.BorderLayout());

        jPanel20.setLayout(new java.awt.BorderLayout());

        jPanel20.setBorder(new javax.swing.border.TitledBorder("Local Server"));
        jLabel7.setText("Incoming mail port");
        jPanel11.add(jLabel7);

        jTextField6.setColumns(5);
        jTextField6.setText(configurationData.getSetting("proxyserver.incoming.port","110"));
        jPanel11.add(jTextField6);

        jPanel20.add(jPanel11, java.awt.BorderLayout.CENTER);

        jLabel6.setText("Outgoing mail port");
        jPanel32.add(jLabel6);

        jTextField5.setColumns(5);
        jTextField5.setText(configurationData.getSetting("proxyserver.outgoing.port","25"));
        jPanel32.add(jTextField5);

        jPanel20.add(jPanel32, java.awt.BorderLayout.NORTH);

        jPanel9.add(jPanel20, java.awt.BorderLayout.NORTH);

        jPanel19.setBorder(new javax.swing.border.TitledBorder("Local Login"));
        jPanel33.setLayout(new java.awt.BorderLayout());

        jCheckBox4.setSelected((configurationData.getSetting("proxyserver.auth.require","1").compareTo("1")==0));
        jCheckBox4.setText("Require SMTP login (recommended)");
        jPanel33.add(jCheckBox4, java.awt.BorderLayout.CENTER);

        jPanel19.add(jPanel33);

        jLabel12.setText("Username");
        jPanel34.add(jLabel12);

        jTextField8.setColumns(20);
        jTextField8.setText(configurationData.getSetting("proxyserver.auth.username",""));
        jPanel34.add(jTextField8);

        jPanel19.add(jPanel34);

        jLabel13.setText("Passcode");
        jPanel35.add(jLabel13);

        jPasswordField2.setColumns(20);
        jPasswordField2.setText(configurationData.getSetting("proxyserver.auth.passcode",""));
        jPanel35.add(jPasswordField2);

        jPanel19.add(jPanel35);

        jPanel9.add(jPanel19, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("Proxy Server", jPanel9);

        jPanel10.setLayout(new java.awt.BorderLayout());

        jPanel12.setBorder(new javax.swing.border.TitledBorder("Incoming mail server"));
        jLabel3.setText("Address");
        jPanel16.add(jLabel3);

        jTextField3.setColumns(20);
        jTextField3.setText(configurationData.getSetting("mailserver.incoming.address",""));
        jTextField3.setToolTipText("The address of the remote email server");
        jPanel16.add(jTextField3);

        jPanel12.add(jPanel16);

        jLabel4.setText("Port");
        jPanel17.add(jLabel4);

        jTextField4.setColumns(5);
        jTextField4.setText(configurationData.getSetting("mailserver.incoming.port","110"));
        jTextField4.setToolTipText("The port to connect to");
        jPanel17.add(jTextField4);

        jPanel12.add(jPanel17);

        jLabel5.setText("Server type");
        jPanel18.add(jLabel5);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(populateComboBox("mailserver.incoming.protocol.available","POP3")));
        jComboBox1.setSelectedItem(configurationData.getSetting("mailserver.incoming.protocol.used","POP3"));
        jComboBox1.setToolTipText("What protocol this server is using");
        jComboBox1.setPreferredSize(new java.awt.Dimension(100, 25));
        jPanel18.add(jComboBox1);

        jPanel12.add(jPanel18);

        jPanel10.add(jPanel12, java.awt.BorderLayout.CENTER);

        jPanel13.setLayout(new java.awt.BorderLayout());

        jPanel13.setBorder(new javax.swing.border.TitledBorder("Outgoing mail server (SMTP) "));
        jLabel1.setText("Address");
        jPanel14.add(jLabel1);

        jTextField1.setColumns(20);
        jTextField1.setText(configurationData.getSetting("mailserver.outgoing.address",""));
        jTextField1.setToolTipText("The address of the remote email server");
        jPanel14.add(jTextField1);

        jPanel13.add(jPanel14, java.awt.BorderLayout.NORTH);

        jLabel2.setText("Port");
        jPanel28.add(jLabel2);

        jTextField2.setColumns(5);
        jTextField2.setText(configurationData.getSetting("mailserver.outgoing.port","25"));
        jTextField2.setToolTipText("The port to connect to");
        jPanel28.add(jTextField2);

        jPanel13.add(jPanel28, java.awt.BorderLayout.CENTER);

        jPanel15.setLayout(new java.awt.BorderLayout());

        jPanel30.setLayout(new java.awt.BorderLayout());

        jCheckBox3.setSelected((configurationData.getSetting("mailserver.outgoing.auth.require","0").compareTo("1")==0));
        jCheckBox3.setText("Use SMTP auth login");
        jCheckBox3.setToolTipText("Does the upstream mail server support SMTP auth?");
        jPanel30.add(jCheckBox3, java.awt.BorderLayout.CENTER);

        jPanel15.add(jPanel30, java.awt.BorderLayout.NORTH);

        jLabel11.setText("Passcode");
        jPanel31.add(jLabel11);

        jPasswordField1.setColumns(20);
        jPasswordField1.setText(configurationData.getSetting("mailserver.outgoing.auth.passcode",""));
        jPanel31.add(jPasswordField1);

        jPanel15.add(jPanel31, java.awt.BorderLayout.SOUTH);

        jLabel10.setText("Username");
        jPanel29.add(jLabel10);

        jTextField7.setColumns(20);
        jTextField7.setText(configurationData.getSetting("mailserver.outgoing.auth.username",""));
        jPanel29.add(jTextField7);

        jPanel15.add(jPanel29, java.awt.BorderLayout.CENTER);

        jPanel13.add(jPanel15, java.awt.BorderLayout.SOUTH);

        jPanel10.add(jPanel13, java.awt.BorderLayout.NORTH);

        jTabbedPane1.addTab("Mail Server", jPanel10);

        jPanel2.add(jTabbedPane1, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel2, java.awt.BorderLayout.NORTH);

        pack();
    }//GEN-END:initComponents

    /** Ok button */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // save settings
        applySettings();
        
        // close window
        setVisible(false);
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /** Apply button */
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // save settings
        applySettings();
        
    }//GEN-LAST:event_jButton2ActionPerformed

    /** Cancel button */
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        setVisible(false);
        dispose();
    }//GEN-LAST:event_jButton3ActionPerformed
    
    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog
    
    /** Apply the settings from the various options */
    private void applySettings() {
        
        // Extract the settings
        
            // Mail Server
            configurationData.setSetting("mailserver.outgoing.address",jTextField1.getText());
            configurationData.setSetting("mailserver.outgoing.port",jTextField2.getText());
            
            configurationData.setSetting("mailserver.incoming.address",jTextField3.getText());
            configurationData.setSetting("mailserver.incoming.port",jTextField4.getText());
            
            configurationData.setSetting("mailserver.incoming.protocol.used",(String)jComboBox1.getSelectedItem());
            
            if (jCheckBox3.isSelected())
                configurationData.setSetting("mailserver.outgoing.auth.require", "1");
            else
                configurationData.setSetting("mailserver.outgoing.auth.require", "0");
            
            configurationData.setSetting("mailserver.outgoing.auth.username",jTextField7.getText());
            
// ***** TODO: MD5 store mailserver.outgoing.auth.passcode in SMTP auth compatible form
            

            // Proxy server
            configurationData.setSetting("proxyserver.outgoing.port",jTextField5.getText());
            configurationData.setSetting("proxyserver.incoming.port",jTextField6.getText());
        
            if (jCheckBox4.isSelected())
                configurationData.setSetting("proxyserver.auth.require", "1");
            else
                configurationData.setSetting("proxyserver.auth.require", "0");
            
            configurationData.setSetting("proxyserver.auth.username",jTextField8.getText());

// ***** TODO: MD5 store proxyserver.auth.passcode in SMTP auth compatible form            
            
            
            
            // Openpgp settings
            if (jCheckBox1.isSelected())
                configurationData.setSetting("openpgp.encryptalloutgoingemail", "1");
            else
                configurationData.setSetting("openpgp.encryptalloutgoingemail", "0");
            
            if (jCheckBox2.isSelected())
                configurationData.setSetting("openpgp.signalloutgoingemail", "1");
            else
                configurationData.setSetting("openpgp.signalloutgoingemail", "0");
            
            configurationData.setSetting("openpgp.symmetricalgorithm.used", (String)jComboBox3.getSelectedItem());
            
        // Save the settings
        try {
            configurationData.saveConfig();
        } catch (IOException e) {
            System.err.println("Error saving configuration : " + e.getMessage());
        }
    }
    
    /** Internal method to populate the combo boxes with data. */
    private String[] populateComboBox(String setting, String def) {
        Vector v = new Vector();
        
        StringTokenizer st = new StringTokenizer(configurationData.getSetting(setting, def),",\r\n");
        
        while (st.hasMoreTokens()) {
            v.add(st.nextToken());
        }

        String items[] = new String[v.size()];
        for (int n = 0; n<items.length; n++)
            items[n] = (String)v.get(n);
        
        return items;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPasswordField jPasswordField2;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JPanel jPanel35;
    private javax.swing.JPanel jPanel34;
    private javax.swing.JPanel jPanel33;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel28;
    // End of variables declaration//GEN-END:variables
    private ConfigurationData configurationData;
}
